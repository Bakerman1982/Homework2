[
  {
    "objectID": "Programming_To_R.html",
    "href": "Programming_To_R.html",
    "title": "Programming R Base",
    "section": "",
    "text": "Create two vectors. One vector corresponding to the pre measurements and one to the post measurements.\n\n\n#Create vectors with given values\npre_meas &lt;- c(130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135)\npost_meas &lt;- c(114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113)\n\n\nAssign names to the vector elements using the paste() function.\n\n\n#Create the names vector with formatting found inside paste function.  Assign them to both variable vectors and then bind the rows to the names so that they are matched. \nnames &lt;- paste(\"Subject\", 1:20, sep = \"_\")\nnames(pre_meas) &lt;- names\nnames(post_meas) &lt;- names\nrbind(pre_meas, post_meas)\n\n          Subject_1 Subject_2 Subject_3 Subject_4 Subject_5 Subject_6 Subject_7\npre_meas        130       128       116       124       133       134       118\npost_meas       114        98       113        99       107       116       113\n          Subject_8 Subject_9 Subject_10 Subject_11 Subject_12 Subject_13\npre_meas        126       114        127        141        138        128\npost_meas       111       119        117        101        119        130\n          Subject_14 Subject_15 Subject_16 Subject_17 Subject_18 Subject_19\npre_meas         140        137        131        120        128        139\npost_meas        122        106        106        124        102        117\n          Subject_20\npre_meas         135\npost_meas        113\n\n\n\nCalculate the change in blood pressure for each patient by subtracting post-treatment measurements from pre-treatment measurements.\n\n\n#Calculate the change (delta) in post- to pre- measurment blood pressures\nsubject_delta_task1 &lt;- pre_meas - post_meas\nsubject_delta_task1\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n        15         -5         10         40         19         -2         18 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n        31         25         -4         26         22         22 \n\n\n\nCalculate the average decrease in blood pressure across all patients.\n\n\n#mean function on the change in blood pressures for all observations\nmean(subject_delta_task1)\n\n[1] 17\n\n\n\nDetermine which patients experienced a decrease in blood pressure after treatment (a positive change).\n\n\n#list the names values of the subjects that had a reduce blood pressure measurement after treatment. \nnames(subject_delta_task1[(subject_delta_task1 &lt; 0) == TRUE])\n\n[1] \"Subject_9\"  \"Subject_13\" \"Subject_17\"\n\n\n\nSubset the vector of differences to only return those that have a positive change.\n\n\nsubject_delta_task1[c(9,13,17)]\n\n Subject_9 Subject_13 Subject_17 \n        -5         -2         -4 \n\n\n\nCalculate the average decrease in blood pressure for those where the blood pressure decreased (positive change).\n\n\n#Wrap mean function around subset vector. \nmean(subject_delta_task1[c(9,13,17)])\n\n[1] -3.666667"
  },
  {
    "objectID": "Programming_To_R.html#task-1---basic-vector-practice",
    "href": "Programming_To_R.html#task-1---basic-vector-practice",
    "title": "Programming R Base",
    "section": "",
    "text": "Create two vectors. One vector corresponding to the pre measurements and one to the post measurements.\n\n\n#Create vectors with given values\npre_meas &lt;- c(130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135)\npost_meas &lt;- c(114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113)\n\n\nAssign names to the vector elements using the paste() function.\n\n\n#Create the names vector with formatting found inside paste function.  Assign them to both variable vectors and then bind the rows to the names so that they are matched. \nnames &lt;- paste(\"Subject\", 1:20, sep = \"_\")\nnames(pre_meas) &lt;- names\nnames(post_meas) &lt;- names\nrbind(pre_meas, post_meas)\n\n          Subject_1 Subject_2 Subject_3 Subject_4 Subject_5 Subject_6 Subject_7\npre_meas        130       128       116       124       133       134       118\npost_meas       114        98       113        99       107       116       113\n          Subject_8 Subject_9 Subject_10 Subject_11 Subject_12 Subject_13\npre_meas        126       114        127        141        138        128\npost_meas       111       119        117        101        119        130\n          Subject_14 Subject_15 Subject_16 Subject_17 Subject_18 Subject_19\npre_meas         140        137        131        120        128        139\npost_meas        122        106        106        124        102        117\n          Subject_20\npre_meas         135\npost_meas        113\n\n\n\nCalculate the change in blood pressure for each patient by subtracting post-treatment measurements from pre-treatment measurements.\n\n\n#Calculate the change (delta) in post- to pre- measurment blood pressures\nsubject_delta_task1 &lt;- pre_meas - post_meas\nsubject_delta_task1\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n        15         -5         10         40         19         -2         18 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n        31         25         -4         26         22         22 \n\n\n\nCalculate the average decrease in blood pressure across all patients.\n\n\n#mean function on the change in blood pressures for all observations\nmean(subject_delta_task1)\n\n[1] 17\n\n\n\nDetermine which patients experienced a decrease in blood pressure after treatment (a positive change).\n\n\n#list the names values of the subjects that had a reduce blood pressure measurement after treatment. \nnames(subject_delta_task1[(subject_delta_task1 &lt; 0) == TRUE])\n\n[1] \"Subject_9\"  \"Subject_13\" \"Subject_17\"\n\n\n\nSubset the vector of differences to only return those that have a positive change.\n\n\nsubject_delta_task1[c(9,13,17)]\n\n Subject_9 Subject_13 Subject_17 \n        -5         -2         -4 \n\n\n\nCalculate the average decrease in blood pressure for those where the blood pressure decreased (positive change).\n\n\n#Wrap mean function around subset vector. \nmean(subject_delta_task1[c(9,13,17)])\n\n[1] -3.666667"
  },
  {
    "objectID": "Programming_To_R.html#task-2---basic-data-frame-practice",
    "href": "Programming_To_R.html#task-2---basic-data-frame-practice",
    "title": "Programming R Base",
    "section": "Task 2 - Basic Data Frame practice",
    "text": "Task 2 - Basic Data Frame practice\n\n\nCreate a data frame object with four columns corresponding to your data above: patient, pre_bp, post_bp, and diff_bp.\n\n\n#Create the data frame\ndf_BP_Task2 &lt;- data.frame(\"names\" = names[1:20],\n                          \"pre_bp\" = pre_meas,\n                          \"post_bp\" = post_meas,\n                          \"diff_bp\" = subject_delta_task1)\n\n\nReturn only rows where the diff_bp column is negative.\n\n\n#See only the differences resulting in negative values\ndf_BP_Task2[(df_BP_Task2$diff_bp &lt; 0),]\n\n                names pre_bp post_bp diff_bp\nSubject_9   Subject_9    114     119      -5\nSubject_13 Subject_13    128     130      -2\nSubject_17 Subject_17    120     124      -4\n\n\n\nAdd a new column to the data frame corresponding to TRUE if the post_bp is less than 120.\n\n\n#Create a dummy vector called Boolean_120 with blank values. \nBoolean_120 &lt;- rep(\"\", times = length(seq_along(subject_delta_task1)))\n\n#Add dummy vector to the data frame\ndf_BP_Task2 &lt;- cbind(df_BP_Task2, Boolean_120)\n\n#Replace blank values \ndf_BP_Task2$Boolean_120[df_BP_Task2$post_bp &lt; 120] &lt;- \"TRUE\"\n\n\nFinally, print the data frame out nicely in your final document by modifying the code below appropriately.\n\n\nknitr::kable(df_BP_Task2)\n\n\n\n\n\nnames\npre_bp\npost_bp\ndiff_bp\nBoolean_120\n\n\n\n\nSubject_1\nSubject_1\n130\n114\n16\nTRUE\n\n\nSubject_2\nSubject_2\n128\n98\n30\nTRUE\n\n\nSubject_3\nSubject_3\n116\n113\n3\nTRUE\n\n\nSubject_4\nSubject_4\n124\n99\n25\nTRUE\n\n\nSubject_5\nSubject_5\n133\n107\n26\nTRUE\n\n\nSubject_6\nSubject_6\n134\n116\n18\nTRUE\n\n\nSubject_7\nSubject_7\n118\n113\n5\nTRUE\n\n\nSubject_8\nSubject_8\n126\n111\n15\nTRUE\n\n\nSubject_9\nSubject_9\n114\n119\n-5\nTRUE\n\n\nSubject_10\nSubject_10\n127\n117\n10\nTRUE\n\n\nSubject_11\nSubject_11\n141\n101\n40\nTRUE\n\n\nSubject_12\nSubject_12\n138\n119\n19\nTRUE\n\n\nSubject_13\nSubject_13\n128\n130\n-2\n\n\n\nSubject_14\nSubject_14\n140\n122\n18\n\n\n\nSubject_15\nSubject_15\n137\n106\n31\nTRUE\n\n\nSubject_16\nSubject_16\n131\n106\n25\nTRUE\n\n\nSubject_17\nSubject_17\n120\n124\n-4\n\n\n\nSubject_18\nSubject_18\n128\n102\n26\nTRUE\n\n\nSubject_19\nSubject_19\n139\n117\n22\nTRUE\n\n\nSubject_20\nSubject_20\n135\n113\n22\nTRUE"
  },
  {
    "objectID": "Programming_To_R.html#task-3---list-practice",
    "href": "Programming_To_R.html#task-3---list-practice",
    "title": "Programming R Base",
    "section": "Task 3 - List practice",
    "text": "Task 3 - List practice\n\n\nCreate a new data frame with this data in it that is similar to the data frame from task 2 (including the new column).\n\n\n#Assign values to vectors\npre_bp_3 &lt;- c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130)\npost_bp_3 &lt;- c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124)\n\n#Create a vector of values of the differences between blood pressures\nsubject_delta_task3 &lt;- pre_bp_3 - post_bp_3\n\n#Create a vector of empty values as a placeholder for the T/F column\nBoolean_120_3 &lt;- rep(\"-\", times = length(seq_along(subject_delta_task3)))\n\n#Create the dataframe and fill with column vectors desired include dummy boolean vector. \ndf_BP_Task3 &lt;- data.frame(\"names\" = names[1:10],\n                          \"pre_bp\" = pre_bp_3,\n                          \"post_bp\" = post_bp_3,\n                          \"diff_bp\" = subject_delta_task3,\n                          Boolean_120_3)\n\n#Logic which looks at post_bp column and replaces \"TRUE\" for values &lt;120 in the Boolean_120_3 vector in the dataframe\ndf_BP_Task3$Boolean_120_3 &lt;- df_BP_Task3$Boolean_120_3[df_BP_Task3$post_bp_3 &lt; 120] &lt;- \"TRUE\"\ndf_BP_Task3\n\n        names pre_bp post_bp diff_bp Boolean_120_3\n1   Subject_1    138     105      33          TRUE\n2   Subject_2    135     136      -1          TRUE\n3   Subject_3    147     123      24          TRUE\n4   Subject_4    117     130     -13          TRUE\n5   Subject_5    152     134      18          TRUE\n6   Subject_6    134     143      -9          TRUE\n7   Subject_7    114     135     -21          TRUE\n8   Subject_8    121     139     -18          TRUE\n9   Subject_9    131     120      11          TRUE\n10 Subject_10    130     124       6          TRUE\n\n\n\nNow create and store a list with two elements:\n\n1st element named treatment and contains the first data frame you created.\n2nd element named placebo and contains the second data frame you created.\n\n\n\n# Create a list with both dataframes from task #2 and #3 as a subset.\nTask3list &lt;- list(\"treatment\" = df_BP_Task2, \"placebo\" = df_BP_Task3); Task3list;\n\n\nAccess the first list element using three different types of syntax.\n\n\n# Using single brackets\nTask3list[1]\n\n$treatment\n                names pre_bp post_bp diff_bp Boolean_120\nSubject_1   Subject_1    130     114      16        TRUE\nSubject_2   Subject_2    128      98      30        TRUE\nSubject_3   Subject_3    116     113       3        TRUE\nSubject_4   Subject_4    124      99      25        TRUE\nSubject_5   Subject_5    133     107      26        TRUE\nSubject_6   Subject_6    134     116      18        TRUE\nSubject_7   Subject_7    118     113       5        TRUE\nSubject_8   Subject_8    126     111      15        TRUE\nSubject_9   Subject_9    114     119      -5        TRUE\nSubject_10 Subject_10    127     117      10        TRUE\nSubject_11 Subject_11    141     101      40        TRUE\nSubject_12 Subject_12    138     119      19        TRUE\nSubject_13 Subject_13    128     130      -2            \nSubject_14 Subject_14    140     122      18            \nSubject_15 Subject_15    137     106      31        TRUE\nSubject_16 Subject_16    131     106      25        TRUE\nSubject_17 Subject_17    120     124      -4            \nSubject_18 Subject_18    128     102      26        TRUE\nSubject_19 Subject_19    139     117      22        TRUE\nSubject_20 Subject_20    135     113      22        TRUE\n\n# Using double brackets\nTask3list[[1]][]\n\n                names pre_bp post_bp diff_bp Boolean_120\nSubject_1   Subject_1    130     114      16        TRUE\nSubject_2   Subject_2    128      98      30        TRUE\nSubject_3   Subject_3    116     113       3        TRUE\nSubject_4   Subject_4    124      99      25        TRUE\nSubject_5   Subject_5    133     107      26        TRUE\nSubject_6   Subject_6    134     116      18        TRUE\nSubject_7   Subject_7    118     113       5        TRUE\nSubject_8   Subject_8    126     111      15        TRUE\nSubject_9   Subject_9    114     119      -5        TRUE\nSubject_10 Subject_10    127     117      10        TRUE\nSubject_11 Subject_11    141     101      40        TRUE\nSubject_12 Subject_12    138     119      19        TRUE\nSubject_13 Subject_13    128     130      -2            \nSubject_14 Subject_14    140     122      18            \nSubject_15 Subject_15    137     106      31        TRUE\nSubject_16 Subject_16    131     106      25        TRUE\nSubject_17 Subject_17    120     124      -4            \nSubject_18 Subject_18    128     102      26        TRUE\nSubject_19 Subject_19    139     117      22        TRUE\nSubject_20 Subject_20    135     113      22        TRUE\n\n# Using \"$\"\nTask3list$treatment\n\n                names pre_bp post_bp diff_bp Boolean_120\nSubject_1   Subject_1    130     114      16        TRUE\nSubject_2   Subject_2    128      98      30        TRUE\nSubject_3   Subject_3    116     113       3        TRUE\nSubject_4   Subject_4    124      99      25        TRUE\nSubject_5   Subject_5    133     107      26        TRUE\nSubject_6   Subject_6    134     116      18        TRUE\nSubject_7   Subject_7    118     113       5        TRUE\nSubject_8   Subject_8    126     111      15        TRUE\nSubject_9   Subject_9    114     119      -5        TRUE\nSubject_10 Subject_10    127     117      10        TRUE\nSubject_11 Subject_11    141     101      40        TRUE\nSubject_12 Subject_12    138     119      19        TRUE\nSubject_13 Subject_13    128     130      -2            \nSubject_14 Subject_14    140     122      18            \nSubject_15 Subject_15    137     106      31        TRUE\nSubject_16 Subject_16    131     106      25        TRUE\nSubject_17 Subject_17    120     124      -4            \nSubject_18 Subject_18    128     102      26        TRUE\nSubject_19 Subject_19    139     117      22        TRUE\nSubject_20 Subject_20    135     113      22        TRUE\n\n\n\nIn one line, access the placebo data frame, pre_bp column\n\n\nTask3list$placebo$pre_bp\n\n [1] 138 135 147 117 152 134 114 121 131 130"
  },
  {
    "objectID": "Programming_To_R.html#task-4---control-flow-practice",
    "href": "Programming_To_R.html#task-4---control-flow-practice",
    "title": "Programming R Base",
    "section": "Task 4 - Control Flow Practice",
    "text": "Task 4 - Control Flow Practice\n\n\nCreate a new column in each data frame from above called status.\n\n\n#Create dummy columns with appropriate length for the data frame assignment\nstatus10 &lt;- rep(\"\", length(Task3list$placebo[,1]))\nstatus20 &lt;- rep(\"\", length(Task3list$treatment[,1]))\n#Add new columns to each of the dataframes from Tasks 2 and 3. \nTask3list$treatment &lt;- data.frame(Task3list$treatment, \"status\" = status20)\nTask3list$placebo &lt;- cbind(Task3list$placebo, \"status\" = status10)\n\n\nFor the non-placebo data frame (within the list), create a for loop and use if/then/else logic to create the status column’s values.\n\n\n#For loops that assigns single-word status descriptions to different levels of blood pressure observation. \nfor (i in 1:20) {\n  if (Task3list$treatment$post_bp[i] &lt;= 120) {\n    Task3list$treatment$status[i] &lt;- \"optimal\"\n  } else if (Task3list$treatment$post_bp[i] &gt; 120 && Task3list$treatment$post_bp[i] &lt;= 130) {\n    Task3list$treatment$status[i] &lt;- \"borderline\"\n  } else {\n    Task3list$treatment$status[i] &lt;- \"high\"\n  }\n}; Task3list$treatment;\n\n                names pre_bp post_bp diff_bp Boolean_120     status\nSubject_1   Subject_1    130     114      16        TRUE    optimal\nSubject_2   Subject_2    128      98      30        TRUE    optimal\nSubject_3   Subject_3    116     113       3        TRUE    optimal\nSubject_4   Subject_4    124      99      25        TRUE    optimal\nSubject_5   Subject_5    133     107      26        TRUE    optimal\nSubject_6   Subject_6    134     116      18        TRUE    optimal\nSubject_7   Subject_7    118     113       5        TRUE    optimal\nSubject_8   Subject_8    126     111      15        TRUE    optimal\nSubject_9   Subject_9    114     119      -5        TRUE    optimal\nSubject_10 Subject_10    127     117      10        TRUE    optimal\nSubject_11 Subject_11    141     101      40        TRUE    optimal\nSubject_12 Subject_12    138     119      19        TRUE    optimal\nSubject_13 Subject_13    128     130      -2             borderline\nSubject_14 Subject_14    140     122      18             borderline\nSubject_15 Subject_15    137     106      31        TRUE    optimal\nSubject_16 Subject_16    131     106      25        TRUE    optimal\nSubject_17 Subject_17    120     124      -4             borderline\nSubject_18 Subject_18    128     102      26        TRUE    optimal\nSubject_19 Subject_19    139     117      22        TRUE    optimal\nSubject_20 Subject_20    135     113      22        TRUE    optimal\n\n\n\nRepeat for the placebo data frame (within the list).\n\n\n#For loops that assigns single-word status descriptions to different levels of blood pressure observation. \nfor (i in 1:10) {\n  if (Task3list$placebo$post_bp[i] &lt;= 120) {\n    Task3list$placebo$status[i] &lt;- \"optimal\"\n  } else if (Task3list$placebo$post_bp[i] &gt; 120 && Task3list$placebo$post_bp[i] &lt;= 130) {\n    Task3list$placebo$status[i] &lt;- \"borderline\"\n  } else {\n    Task3list$placebo$status[i] &lt;- \"high\"\n  }\n}; Task3list$placebo;\n\n        names pre_bp post_bp diff_bp Boolean_120_3     status\n1   Subject_1    138     105      33          TRUE    optimal\n2   Subject_2    135     136      -1          TRUE       high\n3   Subject_3    147     123      24          TRUE borderline\n4   Subject_4    117     130     -13          TRUE borderline\n5   Subject_5    152     134      18          TRUE       high\n6   Subject_6    134     143      -9          TRUE       high\n7   Subject_7    114     135     -21          TRUE       high\n8   Subject_8    121     139     -18          TRUE       high\n9   Subject_9    131     120      11          TRUE    optimal\n10 Subject_10    130     124       6          TRUE borderline"
  },
  {
    "objectID": "Programming_To_R.html#task-5---function-writing",
    "href": "Programming_To_R.html#task-5---function-writing",
    "title": "Programming R Base",
    "section": "Task 5 - Function Writing",
    "text": "Task 5 - Function Writing\n\n\nWrite a function that\n\nTakes in a list with two data frames in it (a treatment and a placebo data frame) as an argument. Give no default value.\nTakes in an R function (that would find a summary of a numeric column) with the default value being set to “mean” (notice this is a quoted string).\nFinds the statistic of interest (as defined by the user input) for the pre, post, and diff columns of both data frames.– Use my_fun &lt;- get(stat) within the function to get the function from the quoted string.\nThese six values should then be returned as a named list with meaningful names- this is a somewhat challenging part!– I’m going to let you consider what to do but you might create a vector of names that is created dynamically based on the statistic passed, create a vector with the actual statistic values, and then assign names() to your vector. Then return that (an atomic vector with names can be returned instead of a list).\nFinally, apply your function to you list of data frames from previous. Use it without specifying your statistic, with specifying your statistic as “var”, “sd”, “min”, and “max”.\n\n\n\n\ncalc_stat &lt;- function(Task3list, stat = mean) {\n  # Initialize a blank list for storing our stat output\n  output_list &lt;- list()\n  \n  # Fetch argument and assign it to easier-to-use var for use in the for loop\n  summfunc &lt;- stat\n  \n  # Define global function variables for\n  name_df &lt;- c(\"treatment\", \"placebo\")\n  name_col &lt;- c(\"pre_bp\", \"post_bp\", \"diff_bp\")\n  \n  # The outside portion of the for loop that iterates over data frames\n  for (i in name_df) {\n    current_df &lt;- Task3list[[i]]  # first dataframe iteration\n    df_result[i] &lt;- list()  # save as list to this var\n  }\n    # The nested inside portion of the for loop that iterates over column names    \n    for (j in name_col) {\n      df_result[j] &lt;- summfunc(current_df[j], na.rm = TRUE)  # runs stat arg against column, saves to var\n      output_list[[name_df, name_col]] &lt;- paste(name_df, name_col , formals(calc_stat)[[2]]:, df_result[j], sep = \" \") #result of stat on col saves to output list as string\n    }\n    # Store the result in the output list\n  }\n  \n  # Display output_list\n  return(output_list)\n}\n\n## Not evaluated because I could not get the for loop to run.  \n\nVector Tracking\n\nFirst Dataframe: TREATMENT\npre_meas/post_meas (DATA)\ndf_BP_Task2 (DATAFRAME)\nsubject_delta_task1 (DELTA PRE-POST)\nBoolean_120 (TRUE/FALSE COLUMN)\n\nSecond Dataframe: PLACEBO\npre_bp_3/post_bp_3 (DATA)\ndf_BP_Task3 (DATAFRAME)\nsubject_delta_task3 (DELTA PRE-POST)\nBoolean_120_3 (TRUE/FALSE COLUMN)\n\nCombination: \nTask3list (LISTS CONTAINING ALL DF)"
  }
]